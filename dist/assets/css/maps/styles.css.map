{"version":3,"sources":["mixins/reset.scss","styles.css","mcgriddle/_mcgriddle.scss","styles.scss","mcgriddle/mixins/_container-display.scss","mcgriddle/settings/_grid.scss","mcgriddle/mixins/_columns.scss","mcgriddle/functions/_column-width.scss"],"names":[],"mappings":"AAKE,8BACE,SAAU,AACV,UAAW,AACX,SAAU,AACV,eAAgB,AAChB,aAAc,AACd,uBAAyB,CAC1B,AAGD,OACE,aAAe,CAChB,AACD,KACE,aAAe,CAChB;;AACD;;;;;;GAMA,ACNF,GDSM,sBACD,CAAA,AAEH,KAEI,WAAY,AACZ,oBACD,ACVH,oBAAqB,ADYrB,aAAA,AACE,mBAAA,AACA,eACD,ACXD,uBAAwB,AC/B1B,oBAAA,ADiCU,0BAA4B,CAAE,AACtC,WACE,YAAc,CAAE,AAEpB,OACE,WChCC,ACIH,sBAAA,AACE,mBAAA,AF8BA,QAAU,CAAE,AAEd,QACE,WAAY,AE5Bd,oBAAA,ACPI,oBAAY,AACZ,aAAA,mBAAA,eAAc,AACd,uBCAuB,ADAvB,oBCAuB,ADCvB,2BCA6B,AJyC/B,iBGzCE,AH0CF,kBG1CE,ADIJ,eAAA,AFwCE,yBGzCG,AH0CH,UAAa,CAAE,AEtCjB,cGNI,YCqDwC,CAAA","file":"styles.css","sourcesContent":["// http://meyerweb.com/eric/tools/css/reset/\n// v2.0 | 20110126\n// License: none (public domain)\n\n@mixin meyer-reset {\n  html, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, b, u, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, embed, figure, figcaption, footer, header, hgroup, menu, nav, output, ruby, section, summary, time, mark, audio, video {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    font-size: 100%;\n    font: inherit;\n    vertical-align: baseline;\n  }\n\n  // HTML5 display-role reset for older browsers\n  article, aside, details, figcaption, figure, footer, header, hgroup, menu, nav, section {\n    display: block;\n  }\n  body {\n    line-height: 1;\n  }\n  ol, ul {\n    list-style: none;\n  }\n  blockquote, q {\n    quotes: none;\n  }\n  blockquote {\n    &:before, &:after {\n      content: \"\";\n      content: none;\n    }\n  }\n  q {\n    &:before, &:after {\n      content: \"\";\n      content: none;\n    }\n  }\n  table {\n    border-collapse: collapse;\n    border-spacing: 0;\n  }\n}\n\n@include meyer-reset;","html, body, div, h1, h3, h4, header {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline; }\n\nheader {\n  display: block; }\n\nbody {\n  line-height: 1; }\n\n/*!\n * McGriddle\n * @description\n * @author Jonathan Suh @jonsuh\n * @site https://jonsuh.com/mcgriddle\n * @link https://github.com/jonsuh/mcgriddle\n */\nh1 {\n  font-family: sans-serif; }\n\nbody {\n  width: 100%;\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -ms-flex-wrap: wrap;\n      flex-wrap: wrap;\n  -webkit-box-pack: start;\n      -ms-flex-pack: start;\n          justify-content: flex-start; }\n  body:after {\n    display: none; }\n\nheader {\n  width: 100%;\n  margin-right: 2.92969%;\n  background: #434a54;\n  margin: 0; }\n\n#topBar {\n  width: 100%;\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -ms-flex-wrap: wrap;\n      flex-wrap: wrap;\n  -webkit-box-pack: start;\n      -ms-flex-pack: start;\n          justify-content: flex-start;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 64em;\n  background-color: #ff9e16;\n  color: white; }\n  #topBar:after {\n    display: none; }\n","/*!\n * McGriddle\n * @description\n * @author Jonathan Suh @jonsuh\n * @site https://jonsuh.com/mcgriddle\n * @link https://github.com/jonsuh/mcgriddle\n */\n\n// Settings\n// ==================================================\n@import \"settings/grid\";\n\n// Functions\n// ==================================================\n@import \"functions/helpers\";\n\n@import \"functions/gutter-width\";\n@import \"functions/column-width\";\n@import \"functions/shift-width\";\n\n// Mixins\n// ==================================================\n@import \"mixins/grid-collapse\";\n@import \"mixins/grid-direction\";\n@import \"mixins/grid-flexbox\";\n@import \"mixins/grid-reset\";\n@import \"mixins/container-display\";\n\n@import \"mixins/container\";\n@import \"mixins/columns\";\n@import \"mixins/shift\";\n","// styles.scss\n@import 'mixins/reset.scss';\n@import 'mixins/mixins.scss';\n\n\n// variables\n$blue: #009bde;\n$orange: #ff9e16;\n$grayBlue: #434a54;\n\nh1{\n  font-family: sans-serif;\n}\nh2{\n  color: black;\n}\nbody{\n  @include container(false);\n}\nheader{\n  @include columns(12);\n  background: $grayBlue;\n  margin: 0;\n}\n#topBar{\n  @include container;\n  //@include columns(12);\n  background-color: $orange;\n  color: white;\n\n}\n","// ==================================================\n// Container Display\n// ==================================================\n@mixin container-display($_flexbox: default) {\n  @if $_flexbox == default {\n    $_flexbox: $grid-flexbox;\n  }\n\n  @if $_flexbox == true {\n    width: 100%;\n    display: flex;\n    flex-wrap: $grid-flexbox-wrap;\n    justify-content: $grid-flexbox-justify;\n    &:after {\n      display: none;\n    }\n  }\n  @else {\n    &:after {\n      content: \" \";\n      display: block;\n      clear: both;\n    }\n  }\n}\n","// ==================================================\n// Settings\n// ==================================================\n$grid-width          : 64em !default;\n$grid-gutter         : 1.875em !default;\n$grid-columns        : 12 !default;\n$grid-minor          : 1/3 !default;\n$grid-collapse       : false !default;\n$grid-rtl            : false !default;\n\n$grid-flexbox        : true !default;\n$grid-flexbox-wrap   : wrap !default;\n$grid-flexbox-justify: flex-start !default;\n","// ==================================================\n// Columns\n// ==================================================\n@mixin columns($_columns: 1, $_position: default, $_max-width: false) {\n  @if $_max-width == max or $_max-width == true {\n    $_column-width: column-width($_columns, false);\n\n    @if $grid-flexbox == true {\n      width: 100%;\n    }\n    max-width: $_column-width;\n  }\n  @else { // $_max-width == default\n    width: column-width($_columns);\n  }\n\n  @if $_position == center {\n    margin-left: auto;\n    margin-right: auto;\n  }\n  @else {\n    $_float: left;\n    $_margin: right;\n\n    @if $grid-rtl == true {\n      $_float: right;\n      $_margin: left;\n    }\n\n    @if $_position != last and $grid-collapse == false {\n      margin-#{$_margin}: gutter-width();\n    }\n\n    @if $grid-flexbox == false {\n      float: $_float;\n    }\n  }\n}\n","// ==================================================\n// Column Width\n// ==================================================\n@function column-width($_columns: 1, $_percent: true) {\n  $_grid-columns        : $grid-columns;\n\n  $_column-width        : $grid-width;\n  $_column-width-percent: 100%;\n\n  // major or minor\n  @if $_columns == major or $_columns == minor {\n    @if $_columns == major {\n      $_columns: 1 - $grid-minor;\n    }\n    @else {\n      $_columns: $grid-minor;\n    }\n\n    $_columns: $grid-columns * $_columns;\n  }\n  // '#/#'\n  @else if type-of($_columns) == string {\n    $_columns     : str-replace($_columns, \" \");\n    $_index       : str-index($_columns, \"/\");\n    $_index-offset: 1;\n\n    @if $_index == null {\n      $_index       : str-index($_columns, \"of\");\n      $_index-offset: 2;\n    }\n\n    @if $_index {\n      $_grid-columns: to-number(str-slice($_columns, $_index + $_index-offset, str-length($_columns)));\n      $_columns     : to-number(str-slice($_columns, 1, $_index - 1));\n    }\n  }\n  // # of # or # #\n  @else if type-of($_columns) == list {\n    @if length($_columns) == 3 {\n      $_grid-columns: nth($_columns, 3);\n    }\n    @else {\n      $_grid-columns: nth($_columns, 2);\n    }\n\n    $_columns: nth($_columns, 1);\n  }\n\n  // calculate column width\n  @if $grid-collapse == true {\n    $_column-width: ($grid-width / $_grid-columns) * $_columns;\n\n    @if $_percent == true {\n      $_column-width-percent: $_column-width * 100% / $grid-width;\n    }\n  }\n  @else {\n    // $_column-count        : ceil($_grid-columns / $_columns);\n    $_column-count        : $_grid-columns / $_columns;\n\n    $_gutter-total-width  : $grid-gutter * ($_column-count - 1);\n    $_grid-remainder-width: $grid-width - $_gutter-total-width;\n\n    $_column-width        : $_grid-remainder-width / $_column-count;\n\n    @if $_percent == true {\n      $_column-width-percent: $_column-width * 100% / $grid-width;\n    }\n  }\n\n  // return column width in absolute or percent value\n  @if $_percent == true {\n    @return $_column-width-percent;\n  }\n  @else {\n    @return $_column-width;\n  }\n}\n"],"sourceRoot":"/source/"}